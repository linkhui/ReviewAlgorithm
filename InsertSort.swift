// 插入排序

// 插入排序是一种简单的排序算法，其基本思想是将一个记录插入到已经排好序的有序表中，从而得到一个新的、记录数增1的有序表。
// 插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。

// 具体步骤如下：
// 1. 从第一个元素开始，该元素可以认为已经被排序
// 2. 取出下一个元素，在已经排序的元素序列中从后向前扫描
// 3. 如果该元素（已排序）大于新元素，将该元素移到下一位置
// 4. 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置
// 5. 将新元素插入到该位置后
// 6. 重复步骤2~5，直到所有元素均排序完毕

// 插入排序的时间复杂度为O(n^2)，空间复杂度为O(1)，是一种稳定的排序算法。

// 以下是插入排序的Swift实现：

func insertionSort(_ array: [Int]) -> [Int] {
    var arr = array
    for i in 1..<arr.count {
        let key = arr[i]
        var j = i - 1
        while j >= 0 && arr[j] > key {
            arr[j + 1] = arr[j]
            j -= 1
        }
        arr[j + 1] = key
        print("第 \(i) 次排序结果: \(arr)")
    }
    return arr
}

// 示例
let array = [5, 2, 4, 6, 1, 3]
let sortedArray = insertionSort(array)
print(sortedArray) // 输出: [1, 2, 3, 4, 5, 6]
